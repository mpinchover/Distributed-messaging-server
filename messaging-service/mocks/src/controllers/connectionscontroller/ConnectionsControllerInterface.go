// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import (
	requests "messaging-service/src/types/requests"

	mock "github.com/stretchr/testify/mock"

	websocket "github.com/gorilla/websocket"
)

// ConnectionsControllerInterface is an autogenerated mock type for the ConnectionsControllerInterface type
type ConnectionsControllerInterface struct {
	mock.Mock
}

// AddClient provides a mock function with given fields: connection, connectionUUID, conn
func (_m *ConnectionsControllerInterface) AddClient(connection *requests.Connection, connectionUUID string, conn *websocket.Conn) {
	_m.Called(connection, connectionUUID, conn)
}

// AddConnection provides a mock function with given fields: connection
func (_m *ConnectionsControllerInterface) AddConnection(connection *requests.Connection) {
	_m.Called(connection)
}

// GetConnection provides a mock function with given fields: userUUID
func (_m *ConnectionsControllerInterface) GetConnection(userUUID string) *requests.Connection {
	ret := _m.Called(userUUID)

	var r0 *requests.Connection
	if rf, ok := ret.Get(0).(func(string) *requests.Connection); ok {
		r0 = rf(userUUID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*requests.Connection)
		}
	}

	return r0
}

// NewConnectionsControllerInterface creates a new instance of ConnectionsControllerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConnectionsControllerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ConnectionsControllerInterface {
	mock := &ConnectionsControllerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
